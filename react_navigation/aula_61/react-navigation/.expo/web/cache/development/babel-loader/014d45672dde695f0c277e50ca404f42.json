{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\guilherme.michalach\\\\Desktop\\\\entra21-guilherme_michalach\\\\react_navigation\\\\aula_61\\\\react-navigation\\\\screens\\\\DrawerScreens\\\\UseRefScreen.js\";\nimport React, { useState, useEffect, useRef } from \"react\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Button from \"react-native-web/dist/exports/Button\";\nexport function UseRefScreen() {\n  var intervaloRef = useRef();\n\n  var _useState = useState(0),\n      _useState2 = _slicedToArray(_useState, 2),\n      count = _useState2[0],\n      setContar = _useState2[1];\n\n  useEffect(function () {\n    intervaloRef.current = setInterval(function () {\n      return setContar(function (contar) {\n        return contar + 1;\n      });\n    }, 1000);\n  });\n  return React.createElement(ScrollView, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 13\n    }\n  }, \"useRef retorna um objeto mut\\xE1vel/modificavel, ele precisa de .current nele para inicializar o argumento inicial. O objeto retornado persiste durante todo o ciclo de vida dele.\"), React.createElement(Text, {\n    style: {\n      fontSize: 120\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }\n  }, contar), React.createElement(Button, {\n    title: \"Stop\",\n    onPress: (function () {\n      clearInterval(intervaloRef.current);\n    }, []),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }\n  }));\n}","map":{"version":3,"sources":["C:/Users/guilherme.michalach/Desktop/entra21-guilherme_michalach/react_navigation/aula_61/react-navigation/screens/DrawerScreens/UseRefScreen.js"],"names":["React","useState","useEffect","useRef","UseRefScreen","intervaloRef","count","setContar","current","setInterval","contar","fontSize","clearInterval"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,MAArC,QAAmD,OAAnD;;;;AAGA,OAAO,SAASC,YAAT,GAAwB;AAC3B,MAAMC,YAAY,GAAGF,MAAM,EAA3B;;AACA,kBAA2BF,QAAQ,CAAC,CAAD,CAAnC;AAAA;AAAA,MAAOK,KAAP;AAAA,MAAcC,SAAd;;AAEAL,EAAAA,SAAS,CAAC,YAAM;AACZG,IAAAA,YAAY,CAACG,OAAb,GAAuBC,WAAW,CAC9B;AAAA,aAAMF,SAAS,CAAC,UAACG,MAAD;AAAA,eAAYA,MAAM,GAAG,CAArB;AAAA,OAAD,CAAf;AAAA,KAD8B,EACW,IADX,CAAlC;AAGH,GAJQ,CAAT;AAMA,SACI,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0LADJ,EAEI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAEC,MAAAA,QAAQ,EAAE;AAAZ,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAiCD,MAAjC,CAFJ,EAGI,oBAAC,MAAD;AACI,IAAA,KAAK,EAAC,MADV;AAEI,IAAA,OAAO,GAAE,YAAM;AACfE,MAAAA,aAAa,CAACP,YAAY,CAACG,OAAd,CAAb;AACC,KAFQ,EAEN,EAFI,CAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHJ,CADJ;AAYH","sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\r\nimport { ScrollView, Text, Button } from \"react-native\";\r\n\r\nexport function UseRefScreen() {\r\n    const intervaloRef = useRef();\r\n    const [count, setContar] = useState(0);\r\n\r\n    useEffect(() => {\r\n        intervaloRef.current = setInterval(\r\n            () => setContar((contar) => contar + 1), 1000\r\n        )\r\n    })\r\n\r\n    return (\r\n        <ScrollView>\r\n            <Text>useRef retorna um objeto mut√°vel/modificavel, ele precisa de .current nele para inicializar o argumento inicial. O objeto retornado persiste durante todo o ciclo de vida dele.</Text>  \r\n            <Text style={{ fontSize: 120 }}>{contar}</Text>\r\n            <Button\r\n                title=\"Stop\"\r\n                onPress={() => {\r\n                clearInterval(intervaloRef.current)\r\n                }, []}\r\n            />\r\n        </ScrollView>\r\n    );\r\n}"]},"metadata":{},"sourceType":"module"}