{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\guilherme.michalach\\\\Desktop\\\\entra21-guilherme_michalach\\\\react_navigation\\\\aula_61\\\\react-navigation\\\\screens\\\\DrawerScreens\\\\UseEffectScreen.js\";\nimport React from \"react\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Text from \"react-native-web/dist/exports/Text\";\nexport function UseEffectScreen() {\n  var _useState = useState(0),\n      _useState2 = _slicedToArray(_useState, 2),\n      contar = _useState2[0],\n      setContar = _useState2[1];\n\n  var countEvery3 = Math.floor(count / 3);\n  return React.createElement(ScrollView, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 13\n    }\n  }, \"useEffect precisa de 2 argumentos, callback e depend\\xEAncias. Assim, quando o componente funciona, a callback \\xE9 chamada se alguma depend\\xEAncia mudou desde a \\xFAltima vez que o componente rodou.\"));\n}","map":{"version":3,"sources":["C:/Users/guilherme.michalach/Desktop/entra21-guilherme_michalach/react_navigation/aula_61/react-navigation/screens/DrawerScreens/UseEffectScreen.js"],"names":["React","UseEffectScreen","useState","contar","setContar","countEvery3","Math","floor","count"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;AAGA,OAAO,SAASC,eAAT,GAA2B;AAC9B,kBAA4BC,QAAQ,CAAC,CAAD,CAApC;AAAA;AAAA,MAAOC,MAAP;AAAA,MAAeC,SAAf;;AACA,MAAMC,WAAW,GAAGC,IAAI,CAACC,KAAL,CAAWC,KAAK,GAAG,CAAnB,CAApB;AAEA,SACI,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gNADJ,CADJ;AAOH","sourcesContent":["import React from \"react\";\r\nimport { ScrollView, Text } from \"react-native\";\r\n\r\nexport function UseEffectScreen() {\r\n    const [contar, setContar] = useState(0)\r\n    const countEvery3 = Math.floor(count / 3)\r\n\r\n    return (\r\n        <ScrollView>\r\n            <Text>\r\n                useEffect precisa de 2 argumentos, callback e dependências. Assim, quando o componente funciona, a callback é chamada se alguma dependência mudou desde a última vez que o componente rodou.\r\n            </Text>  \r\n        </ScrollView>\r\n    );\r\n}"]},"metadata":{},"sourceType":"module"}